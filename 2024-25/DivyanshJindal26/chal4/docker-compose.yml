version: "3.9"

services:
  backend:
    build:
      context: ./backend
    container_name: backend-service
    networks:
      - app_network
    depends_on:
      - postgres
      - redis
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=securepassword
      - POSTGRES_DB=mydb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    expose:
      - "8080"

  frontend:
    build:
      context: ./frontend
    container_name: frontend-service
    networks:
      - app_network
    depends_on:
      - backend
    expose:
      - "80"

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    networks:
      - app_network
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: mydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    security_opt:
      - no-new-privileges:true
    expose:
      - "5432"
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    networks:
      - app_network
    security_opt:
      - no-new-privileges:true
    expose:
      - "6379" 
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: always

networks:
  app_network:
    driver: bridge

volumes:
  postgres-data:
